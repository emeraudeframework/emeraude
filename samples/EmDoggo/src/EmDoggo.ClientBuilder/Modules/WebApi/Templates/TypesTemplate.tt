<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Definux.Emeraude.ClientBuilder.Models" #>
<#@ import namespace="Definux.Emeraude.ClientBuilder.Shared" #>
<#@ import namespace="Definux.Utilities.Extensions" #>
<#@ import namespace="Definux.Emeraude.ClientBuilder.Shared" #>
<#=ClientBuilderConstants.AutoGeneratedHeaderText #>

<# foreach (var classItem in (List<TypeDescription>)Session["Classes"]) { if (classItem.IsComplex) {#>
/**
 * @typedef <#=classItem.Name#><#=classItem.GenericTypeSuffix#>
<# foreach (var property in classItem.Properties) { #>
 * @property {<#=property.Type.JavaScriptTypeName#>} <#=property.Name.ToFirstLower()#>
<#}#>
 */
export class <#=classItem.Name#><#=classItem.GenericTypeSuffix#> {
  constructor(<#=classItem.ConstructorArgumentsListString#>) {
<# foreach (var property in classItem.Properties) { #>
    this.<#=property.Name.ToFirstLower()#> = <#=property.Name.ToFirstLower()#>;
<#}#>
  }
}

<# } } #>