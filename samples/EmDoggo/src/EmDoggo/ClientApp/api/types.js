// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Emeraude Client Builder.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

/**
 * @typedef MutationResult
 * @property {string} mutatedEntityId
 * @property {boolean} succeeded
 */
export class MutationResult {
  constructor(mutatedEntityId, succeeded) {
    this.mutatedEntityId = mutatedEntityId;
    this.succeeded = succeeded;
  }
}

/**
 * @typedef AddDogCommand
 * @property {string} name
 * @property {number} type
 * @property {number} breed
 * @property {string} nullableGuid
 * @property {string} nullableTimeSpan
 * @property {PaginatedList} paginatedDogs
 */
export class AddDogCommand {
  constructor(name, type, breed, nullableGuid, nullableTimeSpan, paginatedDogs) {
    this.name = name;
    this.type = type;
    this.breed = breed;
    this.nullableGuid = nullableGuid;
    this.nullableTimeSpan = nullableTimeSpan;
    this.paginatedDogs = paginatedDogs;
  }
}

/**
 * @typedef PaginatedListOfDogSampleModel
 * @property {Array<DogSampleModel>} items
 * @property {number} allItemsCount
 * @property {number} itemsCount
 * @property {number} pagesCount
 * @property {number} pageSize
 * @property {number} currentPage
 * @property {number} startRow
 */
export class PaginatedListOfDogSampleModel {
  constructor(items, allItemsCount, itemsCount, pagesCount, pageSize, currentPage, startRow) {
    this.items = items;
    this.allItemsCount = allItemsCount;
    this.itemsCount = itemsCount;
    this.pagesCount = pagesCount;
    this.pageSize = pageSize;
    this.currentPage = currentPage;
    this.startRow = startRow;
  }
}

/**
 * @typedef DogSampleModel
 * @property {string} name
 * @property {number} age
 */
export class DogSampleModel {
  constructor(name, age) {
    this.name = name;
    this.age = age;
  }
}

/**
 * @typedef SimpleResult
 * @property {boolean} succeeded
 */
export class SimpleResult {
  constructor(succeeded) {
    this.succeeded = succeeded;
  }
}

/**
 * @typedef ComplexRequestResult
 * @property {boolean} success
 * @property {PaginatedList} paginatedCollection
 */
export class ComplexRequestResult {
  constructor(success, paginatedCollection) {
    this.success = success;
    this.paginatedCollection = paginatedCollection;
  }
}

/**
 * @typedef PaginatedListOfSomeResultItem
 * @property {Array<SomeResultItem>} items
 * @property {number} allItemsCount
 * @property {number} itemsCount
 * @property {number} pagesCount
 * @property {number} pageSize
 * @property {number} currentPage
 * @property {number} startRow
 */
export class PaginatedListOfSomeResultItem {
  constructor(items, allItemsCount, itemsCount, pagesCount, pageSize, currentPage, startRow) {
    this.items = items;
    this.allItemsCount = allItemsCount;
    this.itemsCount = itemsCount;
    this.pagesCount = pagesCount;
    this.pageSize = pageSize;
    this.currentPage = currentPage;
    this.startRow = startRow;
  }
}

/**
 * @typedef SomeResultItem
 * @property {string} id
 * @property {string} name
 */
export class SomeResultItem {
  constructor(id, name) {
    this.id = id;
    this.name = name;
  }
}

/**
 * @typedef ComplexRequestCommand
 * @property {string} description
 * @property {Array<NestedComplexType>} nestedCollection
 */
export class ComplexRequestCommand {
  constructor(description, nestedCollection) {
    this.description = description;
    this.nestedCollection = nestedCollection;
  }
}

/**
 * @typedef NestedComplexType
 * @property {string} id
 * @property {Array<DeepNestedComplexType>} deepCollection
 */
export class NestedComplexType {
  constructor(id, deepCollection) {
    this.id = id;
    this.deepCollection = deepCollection;
  }
}

/**
 * @typedef DeepNestedComplexType
 * @property {string} name
 * @property {number} complexEnum
 */
export class DeepNestedComplexType {
  constructor(name, complexEnum) {
    this.name = name;
    this.complexEnum = complexEnum;
  }
}

