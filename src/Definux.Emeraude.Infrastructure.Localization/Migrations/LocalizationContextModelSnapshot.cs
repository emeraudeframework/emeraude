// <auto-generated />
using Definux.Emeraude.Infrastructure.Localization;
using Definux.Emeraude.Infrastructure.Localization.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Definux.Emeraude.Infrastructure.Localization.Migrations
{
    [DbContext(typeof(LocalizationContext))]
    partial class LocalizationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("BINARY")
                .HasAnnotation("ProductVersion", "6.0.0-rc.1.21452.10");

            modelBuilder.Entity("Definux.Emeraude.Contracts.Localization.ContentKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Key")
                        .HasColumnType("TEXT")
                        .HasColumnName("key")
                        .UseCollation("NOCASE");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("content_keys", (string)null);
                });

            modelBuilder.Entity("Definux.Emeraude.Contracts.Localization.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT")
                        .HasColumnName("code");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_default");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("NativeName")
                        .HasColumnType("TEXT")
                        .HasColumnName("native_name");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("languages", (string)null);
                });

            modelBuilder.Entity("Definux.Emeraude.Contracts.Localization.StaticContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT")
                        .HasColumnName("content")
                        .UseCollation("NOCASE");

                    b.Property<int>("ContentKeyId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("content_key_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("language_id");

                    b.Property<string>("NormalizedContent")
                        .HasColumnType("TEXT")
                        .HasColumnName("normalized_content")
                        .UseCollation("NOCASE");

                    b.HasKey("Id");

                    b.HasIndex("ContentKeyId");

                    b.HasIndex("LanguageId");

                    b.ToTable("static_content", (string)null);
                });

            modelBuilder.Entity("Definux.Emeraude.Contracts.Localization.TranslationKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Key")
                        .HasColumnType("TEXT")
                        .HasColumnName("key")
                        .UseCollation("NOCASE");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("keys", (string)null);
                });

            modelBuilder.Entity("Definux.Emeraude.Contracts.Localization.TranslationValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("language_id");

                    b.Property<string>("NormalizedValue")
                        .HasColumnType("TEXT")
                        .HasColumnName("normalized_value")
                        .UseCollation("NOCASE");

                    b.Property<int>("TranslationKeyId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("translation_key_id");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT")
                        .HasColumnName("value")
                        .UseCollation("NOCASE");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("TranslationKeyId");

                    b.ToTable("values", (string)null);
                });

            modelBuilder.Entity("Definux.Emeraude.Contracts.Localization.StaticContent", b =>
                {
                    b.HasOne("Definux.Emeraude.Contracts.Localization.ContentKey", "ContentKey")
                        .WithMany("StaticContentList")
                        .HasForeignKey("ContentKeyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Definux.Emeraude.Contracts.Localization.Language", "Language")
                        .WithMany("StaticContentList")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContentKey");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Definux.Emeraude.Contracts.Localization.TranslationValue", b =>
                {
                    b.HasOne("Definux.Emeraude.Contracts.Localization.Language", "Language")
                        .WithMany("Translations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Definux.Emeraude.Contracts.Localization.TranslationKey", "TranslationKey")
                        .WithMany("Translations")
                        .HasForeignKey("TranslationKeyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("TranslationKey");
                });

            modelBuilder.Entity("Definux.Emeraude.Contracts.Localization.ContentKey", b =>
                {
                    b.Navigation("StaticContentList");
                });

            modelBuilder.Entity("Definux.Emeraude.Contracts.Localization.Language", b =>
                {
                    b.Navigation("StaticContentList");

                    b.Navigation("Translations");
                });

            modelBuilder.Entity("Definux.Emeraude.Contracts.Localization.TranslationKey", b =>
                {
                    b.Navigation("Translations");
                });
#pragma warning restore 612, 618
        }
    }
}
