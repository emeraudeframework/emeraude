// <auto-generated />
using Definux.Emeraude.Localization;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Definux.Emeraude.Localization.Migrations
{
    [DbContext(typeof(LocalizationContext))]
    [Migration("20200428221641_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("Definux.Emeraude.Domain.Localization.ContentKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Key")
                        .HasColumnName("key")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("content_keys");
                });

            modelBuilder.Entity("Definux.Emeraude.Domain.Localization.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .HasColumnName("code")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDefault")
                        .HasColumnName("is_default")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("TEXT");

                    b.Property<string>("NativeName")
                        .HasColumnName("native_name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("languages");
                });

            modelBuilder.Entity("Definux.Emeraude.Domain.Localization.StaticContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .HasColumnName("content")
                        .HasColumnType("TEXT");

                    b.Property<int>("ContentKeyId")
                        .HasColumnName("content_key_id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LanguageId")
                        .HasColumnName("language_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ContentKeyId");

                    b.HasIndex("LanguageId");

                    b.ToTable("static_content");
                });

            modelBuilder.Entity("Definux.Emeraude.Domain.Localization.TranslationKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Key")
                        .HasColumnName("key")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("keys");
                });

            modelBuilder.Entity("Definux.Emeraude.Domain.Localization.TranslationValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LanguageId")
                        .HasColumnName("language_id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TranslationKeyId")
                        .HasColumnName("translation_key_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .HasColumnName("value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("TranslationKeyId");

                    b.ToTable("values");
                });

            modelBuilder.Entity("Definux.Emeraude.Domain.Localization.StaticContent", b =>
                {
                    b.HasOne("Definux.Emeraude.Domain.Localization.ContentKey", "ContentKey")
                        .WithMany("StaticContentList")
                        .HasForeignKey("ContentKeyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Definux.Emeraude.Domain.Localization.Language", "Language")
                        .WithMany("StaticContentList")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Definux.Emeraude.Domain.Localization.TranslationValue", b =>
                {
                    b.HasOne("Definux.Emeraude.Domain.Localization.Language", "Language")
                        .WithMany("Translations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Definux.Emeraude.Domain.Localization.TranslationKey", "TranslationKey")
                        .WithMany("Translations")
                        .HasForeignKey("TranslationKeyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
