@page "/admin/{entityKey}/create"
@using Definux.Emeraude.Admin.UI.Adapters
@implements IDisposable
@inject IEmPageSchemaProvider EntitiesViewsSchemaProvider;
@inject NavigationManager NavigationManager;
<h3>@EntityKey</h3>
@if (ViewSchema != null)
{
    <EmPagesFormView ViewSchema="ViewSchema"/>
}

@code {
    private string entityKey;
    private EmPageFormViewSchema ViewSchema { get; set; }
    
    [Parameter]
    public string EntityKey { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        this.entityKey = EntityKey;
        await this.LoadViewSchemaAsync();
    }
    
    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        if (!(this.entityKey ?? string.Empty).Equals(EntityKey, StringComparison.OrdinalIgnoreCase))
        {
            this.entityKey = EntityKey;
            await this.LoadViewSchemaAsync();
        }
    }

    private async void LocationChanged(object sender, LocationChangedEventArgs e)
    {
        await this.LoadViewSchemaAsync();
    }

    private async Task LoadViewSchemaAsync()
    {
        this.ViewSchema = await EntitiesViewsSchemaProvider.GetFormViewSchemaAsync(EntityKey);
        this.StateHasChanged();
        if (this.ViewSchema == null)
        {
            NavigationManager.NavigateTo("/error/404", true, true);
        }
    }
    
    void IDisposable.Dispose()
    {
        NavigationManager.LocationChanged -= LocationChanged;
    }
}