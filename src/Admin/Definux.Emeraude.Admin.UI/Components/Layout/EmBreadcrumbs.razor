@inject BreadcrumbsModule BreadcrumbsModule
@implements IDisposable
@if (Breadcrumbs != null && Breadcrumbs.Any())
{
    var orderMax = Breadcrumbs.Select(x => x.Order).Max();
    <nav aria-label="breadcrumb" class="float-left d-inline-block p-2 w-100 ms-2 mt-2">
        <ol class="breadcrumb border-0 m-0 border-radius-0 pt-0 pb-0 ps-0">
            @foreach (var breadcrumb in Breadcrumbs)
            {
                @if (breadcrumb.IsActive)
                {
                    <li class="me-2">
                        <NavLink title="@breadcrumb.Title" ActiveClass="active-breadcrumb" class="btn btn-primary btn-sm p-1" href="@breadcrumb.ActionUrl">@breadcrumb.Title</NavLink>
                    </li>
                }
                else
                {
                    if (breadcrumb.Order == orderMax)
                    {
                        <li aria-current="page">
                            <p title="@breadcrumb.Title" class="@($"btn btn-secondary disabled my-0 p-1 me-2 cursor-normal text-light-gray {GetBreadcrumbOrderMaxClass(breadcrumb.Order, orderMax)}")">@breadcrumb.Title</p>
                        </li>
                    }
                    else
                    {
                        <li>
                            <p title="@breadcrumb.Title" class="@($"btn btn-light disabled my-0 p-1 me-2 cursor-normal text-light-gray {GetBreadcrumbOrderMaxClass(breadcrumb.Order, orderMax)}")">@breadcrumb.Title</p>
                        </li>
                    }
                }
            }
        </ol>
    </nav>
}

@code {
    private IEnumerable<BreadcrumbItemModel> Breadcrumbs { get; set; }
    
    protected override void OnInitialized()
    {
        base.OnInitialized();
        BreadcrumbsModule.BreadcrumbsChanged += BreadcrumbsChanged;
    }

    private void BreadcrumbsChanged(object sender, BreadcrumbsModuleEventArgs e)
    {
        Breadcrumbs = e.Breadcrumbs;
        StateHasChanged();
    }

    private string GetBreadcrumbOrderMaxClass(int order, int orderMax)
    {
        return order == orderMax ? "current-breadcrumb" : string.Empty;
    }
    
    void IDisposable.Dispose()
    {
        BreadcrumbsModule.BreadcrumbsChanged -= BreadcrumbsChanged;
    }
}