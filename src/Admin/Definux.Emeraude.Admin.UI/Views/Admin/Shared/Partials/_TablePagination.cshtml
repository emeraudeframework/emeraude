@model TablePaginationViewModel
@if (Model.NextPagesCount != 0 || Model.PreviousPagesCount != 0)
{
    <nav class="d-flex mt-4">
        <ul class="pagination m-auto">
            @if (Model.PreviousPage != null && Model.PreviousPagesCount > 0)
            {
                <li class="page-item mx-0">
                    <a class="btn btn-primary p-2" href="@Model.GetPaginationHref(Model.PreviousPage, ViewData, Url)">⯇</a>
                </li>
            }
            @if (Model.PreviousPagesCount > 0)
            {
                for (int i = Model.PreviousPagesCount; i >= 1; i--)
                {
                    <li class="page-item ml-1 mr-0">
                        <a class="btn btn-primary p-2" href="@Model.GetPaginationHref(Model.CurrentPage - i, ViewData, Url)">@(Model.CurrentPage - i)</a>
                    </li>
                }
            }
            <li class="page-item active mx-1 mb-0">
                <p class="btn btn-primary p-2">@Model.CurrentPage</p>
            </li>
            @if (Model.NextPagesCount > 0)
            {
                for (int i = 1; i <= Model.NextPagesCount; i++)
                {
                    <li class="page-item mr-1 ml-0">
                        <a class="btn btn-primary p-2" href="@Model.GetPaginationHref(Model.CurrentPage + i, ViewData, Url)">@(Model.CurrentPage + i)</a>
                    </li>
                }
            }
            @if (Model.NextPage != null && Model.NextPagesCount > 0)
            {
                <li class="page-item mx-0">
                    <a class="btn btn-primary p-2" href="@Model.GetPaginationHref(Model.NextPage, ViewData, Url)">⯈</a>
                </li>
            }
        </ul>
    </nav>
}