@using Definux.Emeraude.Admin.EmPages.UI.Adapters
@inject IEmPageDataService DataService

<EmPageView ViewSchema="ViewSchema" HasViewData="@(ViewData != null)">
    @if (ViewData != null)
    {
        if (ViewData.NonMappedFormErrors.Any())
        {
            foreach (var error in ViewData.NonMappedFormErrors)
            {
                <div class="alert alert-danger p-2" role="alert">
                    @error
                </div>
            }
        }
        <form onsubmit="@HandleFormSubmitAsync">
            @foreach (var input in ViewData.Inputs)
            {
                <EmPageFormInput Model="input"/>
            }
            <hr/>
            <div class="form-group mb-0">
                <button type="submit" class="btn btn-primary me-auto mr-0">Save</button>
            </div>
        </form>
    }
</EmPageView>

@code {
    [Parameter]
    public EmPageFormViewSchema ViewSchema { get; set; }
    
    [Parameter]
    public EmPageFormViewData ViewData { get; set; }
    
    [Parameter]
    public EmPageFormType Type { get; set; }
    
    private async Task HandleFormSubmitAsync()
    {
        await DataService.SubmitFormViewDataAsync(Type, ViewSchema, ViewData);
        StateHasChanged();
    }
}