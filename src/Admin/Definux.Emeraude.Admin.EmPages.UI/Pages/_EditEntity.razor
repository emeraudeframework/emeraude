@page "/admin/{entityKey}/{entityId}/edit"
@inherits EmPage
@using Definux.Emeraude.Admin.UI.Extensions
@if (Loaded)
{
    <EmPageFormView ViewSchema="ViewSchema" ViewData="ViewData"/>
}
else
{
    <LoadingIndicator/>
}

@code {
    [Parameter]
    public string EntityId { get; set; }
    
    private EmPageFormViewSchema ViewSchema { get; set; }
    
    private EmPageFormViewData ViewData { get; set; }
    
    private bool FirstInitial { get; set; }
    
    private string PageTitle => ViewSchema?.Context.Title;
    
    private bool Loaded => FirstInitial && ViewSchema != null && ViewData != null;
   
    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if (firstRender)
        {
            FirstInitial = true;
            StateHasChanged();
        }
    }

    protected override IEnumerable<BreadcrumbItemModel> ConfigureBreadcrumbs()
        => ViewSchema?.Breadcrumbs ?? new List<BreadcrumbItemModel>();

    protected override IEnumerable<ActionModel> ConfigureNavigationActions()
        => ViewSchema?.NavbarActions ?? new List<ActionModel>();
    
    protected override async Task ReloadPageAsync()
    {
        ViewSchema = await SchemaProvider.GetFormViewSchemaAsync(EmPageFormType.EditForm, EntityKey);
        StateHasChanged();
        if (ViewSchema == null)
        {
            NavigationManager.NavigateToNotFoundPage();
            return;
        }
        
        ViewData = await DataService.RetrieveFormViewDataAsync(EmPageFormType.EditForm, EntityKey, EntityId, GetQueryParameters(), ViewSchema);
        StateHasChanged();
    }

}