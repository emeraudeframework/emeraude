<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Definux.Utilities.Extensions" #>
<#@ import namespace="Definux.Emeraude.Admin.ClientBuilder.Models" #>
<#@ import namespace="Definux.Emeraude.Admin.ClientBuilder.Shared" #>
<#@ import namespace="Definux.Emeraude.Admin.ClientBuilder.Modules.Xamarin.Extensions" #>
<#=ClientBuilderConstants.AutoGeneratedHeaderText #>

using Definux.Emeraude.AutoGenerated.DataTransferObjects;
using Definux.Emeraude.MobileSdk.Configuration;
using Definux.Emeraude.MobileSdk.ServiceAgents;
using Definux.Emeraude.MobileSdk.ServiceAgents.Http;
using System;
using System.Collections.ObjectModel;
using System.Threading.Tasks;

namespace Definux.Emeraude.AutoGenerated.ServiceAgents
{
    public class <#=Session["EndpointsController"]#>ServiceAgent : ServiceAgent, I<#=Session["EndpointsController"]#>ServiceAgent
    {
        public <#=Session["EndpointsController"]#>ServiceAgent(
            IEmConfiguration configuration,
            IHttpClientFactory clientFactory)
            : base(configuration, clientFactory)
        {
        }
<# foreach (Endpoint endpoint in (List<Endpoint>)Session["Endpoints"]) { #>

        public async Task<<#=endpoint.GetResponseBindableBuildTypeName()#>> <#=endpoint.ActionName#>Async(<#=endpoint.GetBindableStrongTypedArgumentsListString()#>)
        {
	        return await <#=endpoint.GetServiceAgentExecutionMethod()#>;
        }
<# } #>
    }
}